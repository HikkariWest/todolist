		<select class="form-select" id="validationCustom04" name="category_select" required>
			<option selected disabled value="">Выберите категорию</option>
			{% for category in categories %}
				<option class="form-select" value="{{category.name}}">{{category.name}}</option>
			{% endfor %}    С этим почему-то форма не сохраняет данные. Хочу форму такого вида, но увы(((




<table class="table table-success table-striped">
{% for todo in todos %}
{# {% for category in categories %} #}
<a href="{% url 'todo_detail' todo.id %}"><tr>{{todo.name}}</tr></a>
<tr>{{todo.description|truncatewords:5}}</tr>
<tr>{{category.name}}</tr>
{% endfor %}
</table>
<table class="table">


	Странный js код
	/**
 * Sorts a HTML table.
 * 
 * @param {HTMLTableElement} table The table to sort
 * @param {number} column The index of the column to sort
 * @param {boolean} asc Determines if the sorting will be in ascending
 */
function sortTableByColumn(table, column, asc = true) {
    const dirModifier = asc ? 1 : -1;
    const tBody = table.tBodies[0];
    const rows = Array.from(tBody.querySelectorAll("tr"));

    // Sort each row
    const sortedRows = rows.sort((a, b) => {
        const aColText = a.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();
        const bColText = b.querySelector(`td:nth-child(${ column + 1 })`).textContent.trim();

        return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
    });

    // Remove all existing TRs from the table
    while (tBody.firstChild) {
        tBody.removeChild(tBody.firstChild);
    }

    // Re-add the newly sorted rows
    tBody.append(...sortedRows);

    // Remember how the column is currently sorted
    table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-asc", asc);
    table.querySelector(`th:nth-child(${ column + 1})`).classList.toggle("th-sort-desc", !asc);
}

document.querySelectorAll(".table-sortable th").forEach(headerCell => {
    headerCell.addEventListener("click", () => {
        const tableElement = headerCell.parentElement.parentElement.parentElement;
        const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
        const currentIsAscending = headerCell.classList.contains("th-sort-asc");

        sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
    });
});


Попытка вторая сделать фильтрацию таблицы через JS
function formTable(selector) {
    var wrapper = document.querySelector(selector);
    var form = wrapper.getElementsByTagName("form")[0];
    var table = wrapper.getElementsByTagName("table")[0];


    form.onkeyup = function(ev){

        var 
         name = form.elements[0].value,
         description = form.elements[1].value,
         interest = form.elements[2].value,
         date_created = form.elements[3].value,
         completed = form.elements[4].value,
         category = form.elements[5].value;

        for(var i = 1; i < table.rows.length; i++){
            table.rows[i].className = "";

            if(
                table.rows[i].cells[0].innerHTML.indexOf(name) == -1 ||
                table.rows[i].cells[1].innerHTML.indexOf(description) == -1 ||
                table.rows[i].cells[2].innerHTML.indexOf(interest) == -1 ||
                table.rows[i].cells[3].innerHTML.indexOf(date_created) == -1 ||
                table.rows[i].cells[4].innerHTML.indexOf(completed) == -1 ||
                table.rows[i].cells[5].innerHTML.indexOf(category) == -1 
                ){
                table.rows[i].className = "hide";
            }
        }
    }
}
formTable(".wrapper");


Бутстраповский поиск
      <form class="d-flex" action="{% url 'todo_list' %}" method="GET">
        <input class="form-control me-2" name='q' type="search" placeholder="Введите текст..." aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Поиск</button>
        </fieldset>
      </form>


Удаленная "ссылка" которая была в login.html
<li class="google">
    <a href="{% url "social:begin" "google" %}">Login with Google</a>
</li>


Удаленный из todo_list.html badge
<div class="badge badge-success ml-2"></div>

Удаленный render_field
        {% render_field form.username class="form-control" style="width: 100%; padding: 12px; border: none; border-radius: 4px; margin: 5px 0; opacity: 0.85; display: inline-block; font-size: 17px; line-height: 20px; text-decoration: none;" placeholder="Логин" %}
        {% render_field form.password class="form-control" style="width: 100%; padding: 12px; border: none; border-radius: 4px; margin: 5px 0; opacity: 0.85; display: inline-block; font-size: 17px; line-height: 20px; text-decoration: none;" placeholder="Пароль" %}


Создание категорий
@login_required(login_url='login_page')
def category_create(request):
    form = CategoryCreateForm()
    print(request.user)
    if request.method == "POST":
        form = CategoryCreateForm(request.POST)
        if form.is_valid():
            if request.user.profile.premium_status == True:
                category = form.save(commit=False)
                category.user=request.user
                category.save()
                return redirect("category_list")
            elif request.user.profile.premium_status == False:
                return HttpResponse("Извините, но у вас нет прав добавлять категории, купите премиум статус и можете добавлять категории")
    context = {'form':form}
    return render(request, 'todolist/category_create.html', context)

Неработающий поиск задач
# @login_required(login_url='login_page')
# def todo_search(request):
#   search_request = request.GET.get('q')
#   if search_request:
#       print(search_request)
#       todos = Todo.objects.filter(name__istartswith = search_request)
#       todos2 = Todo.objects.filter(description__istartswith = search_request)
#       context = {'todos':todos, 'todos2':todos2}
#   else:
#       todos = Todo.objects.all()
#   context = {'todos':todos}
#   return render(request, 'todolist/todo_list.html', context)

Удаленный шаблон для создания категорий
{% extends "base.html" %}
{% load widget_tweaks %}
{% block content %}
    <form action="" method="POST" enctype="multipart/form-data">
        {% csrf_token %}

        <div class="row align-items-center">
            <div class="col-md-6 mt-3">
                <label for="validationCustom04" class="form-label">Имя категории:</label>
              {% render_field form.name class="form-control" rows="3" cols="5" %}
            </div>
        </div>

    
        <div class="row align-items-center" name="Описание">
           <div class="col-md-6 mt-3">
                <label for="validationCustom04" class="form-label">Описание категории:</label>
                {% render_field form.description class="form-control" placheholder="Опишите вкратце вашу категорию" %}
            </div>
        </div>

        <div class="row">
            <div class="col mt-3">
                <input type="submit" value="Сохранить" class="btn btn-primary">
            </div>
        </div>
    </form>
    
{% endblock content %}